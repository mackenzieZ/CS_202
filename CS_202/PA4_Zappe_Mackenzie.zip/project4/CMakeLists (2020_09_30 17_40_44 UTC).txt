#CMake File for project 4
cmake_minimum_required(VERSION 2.8.9)

# Necessary to give our project a name of our choice
project(project4)

# Add subfolder named [include] to the list directories to be 
# considered for #include statements throughout the entire project
include_directories(include)

# Create a variable with the list of source files for my_lib_b
set(STRINGMOD_SRCS src/StringModule/my_string.cpp)
# Create a library by compiling these (uses the above created list of sources)
add_library(StringModule ${STRINGMOD_SRCS}) 

# Create a variable with the list of sources for MyModuleA
set(AGENCY_SOURCES src/AgencyModule/agency.cpp
                    src/AgencyModule/car.cpp
                    src/AgencyModule/sensor.cpp
                    src/AgencyModule/menu.cpp
                    )
# Create a library by compiling these (uses the above created list of sources)
add_library(AgencyModule ${AGENCY_SOURCES})


# Rule for creating an executable (by compiling the project source main)
add_executable(project4 src/proj4.cpp)
# Specify any necessary linking for the above rule, against other libraries 
# either created by this project or externally provided
target_link_libraries(project4 StringModule AgencyModule)

# Specify where to place build products if we also want to do a [make install]
install(TARGETS project4 StringModule AgencyModule
	RUNTIME DESTINATION ${PROJECT_SOURCE_DIR}/devel/bin
	LIBRARY DESTINATION ${PROJECT_SOURCE_DIR}/devel/lib
	ARCHIVE DESTINATION ${PROJECT_SOURCE_DIR}/devel/lib/static)
# Copy the headers (for people who want to use our libraries) to install path
install(DIRECTORY ${PROJECT_SOURCE_DIR}/include/
	DESTINATION ${PROJECT_SOURCE_DIR}/devel/include
	FILES_MATCHING PATTERN "*.h" PATTERN "*.hpp")
